legend.direction = "vertical",
legend.title = element_text(size = 8),
legend.text = element_text(size = 6),
axis.ticks.x = element_line(color = "black"),
axis.text.x = element_text(vjust = 5),
axis.ticks.length = unit(-0.5, "cm"),
axis.line = element_line(color = "black"),
panel.grid.major = element_blank()
)
p1_plotly <- ggplotly(p1)
p1_plotly <- p1_plotly %>%
layout(annotations = list(
text = 'Note: The sizes of the data points represent population sizes. \n Source: Barro and Lee (2013), http://www.barrolee.com/ \n UN, World Population Prospects, https://population.un.org/wpp/Download/',
x = 1.03,
y = -0.12,
showarrow = FALSE,
xref = 'paper',
yref = 'paper',
xanchor = 'right',
yanchor = 'bottom',
font = list(
size = 5
)))
p1_plotly
model1 <- lm(Schooling.year ~ Mean.year.of.childbearing, data = dclean)
intercept1 <- coef(model1)[1]
slope1 <- coef(model1)[2]
equation1 <- paste("y = ", round(slope1, 2), "x", " + ", round(intercept1, 2))
p1 <- dclean %>%
ggplot(aes(x=Schooling.year, y=Mean.year.of.childbearing, label = country)) +
geom_point(aes(color = Region, frame = year, size = Population)) +
scale_color_viridis(discrete = TRUE)+
annotate("text", x = 12, y = 24.5, label = equation1, hjust = 0, vjust = 0, color = "black") +
geom_smooth(method = lm, se = FALSE) +
scale_x_continuous("Average years of total schooling",
breaks = seq(0, 14,2),
limits = c(0,14)) +
scale_y_continuous("Mean age of first childbearing",
breaks = seq(24, 32,4),
limits = c(24,32)) +
theme_minimal(base_size = 10) +
labs(
title = "A negative relationship was found between educational attainment and \n the mean age of childbearing for women worldwide (1950-2015)",
subtitle = "An increase of one unit in the educational attainment correlates with \n a decrease of 1.26 units in the mean age of childbearing",
x = "Total years of schooling",
y = "Mean age of childbearing",
color = "Region",
size = "",
caption = "Note: The sizes of the data points represent population sizes. \n Source: Barro and Lee (2013), http://www.barrolee.com/ \n UN, World Population Prospects, https://population.un.org/wpp/Download/"
) +
theme(
plot.title = element_text(size = 10),
legend.position = "right",
legend.direction = "vertical",
legend.title = element_text(size = 8),
legend.text = element_text(size = 6),
axis.ticks.x = element_line(color = "black"),
axis.text.x = element_text(vjust = 5),
axis.ticks.length = unit(-0.5, "cm"),
axis.line = element_line(color = "black"),
panel.grid.major = element_blank()
)
p1_plotly <- ggplotly(p1)
p1_plotly <- p1_plotly %>%
layout(annotations = list(
text = 'Note: The sizes of the data points represent population sizes. \n Source: Barro and Lee (2013), http://www.barrolee.com/ \n UN, World Population Prospects, https://population.un.org/wpp/Download/',
x = 1.03,
y = -0.125,
showarrow = FALSE,
xref = 'paper',
yref = 'paper',
xanchor = 'right',
yanchor = 'bottom',
font = list(
size = 5
)))
p1_plotly
library(flexdashboard)
library(rio)
library(ggplot2)
library(tidyverse)
library(here)
library(gtsummary)
library(kableExtra)
library(plotly)
library(gapminder)
library(ggtext)
library(gganimate)
library(magick)
library(dplyr)
library(tidyr)
library(viridis)
woman <- import(here("BL_v3_F2564.csv"))%>%
as.tibble()
child <- import(here("childbearing.csv"))%>%
as.tibble()
child$country <- child$`Region, subregion, country or area *`
child$year <- child$Year
### combine dataset
d <- left_join(woman, child, join_by(country, year))
d <- d[, -c(21, 22)]
d$childbearing <- as.numeric(d$`Mean Age Childbearing (years)`)
d<- d %>%
group_by(country) %>%
mutate(Mean.year.of.childbearing = mean(childbearing))
head(d)
### rename variables
d <- d %>%
rename("No_formal" = "lu",
"Primary" = "lp",
"Primary_complete" = "lpc",
"Secondary" = "ls",
"Secondary_complete" = "lsc",
"% of Tertiary" = "lh",
"Tertiary_complete" = "lhc",
"Schooling.year" = "yr_sch",
"Average.tertiary.schooling" = "yr_sch_ter",
"Region" = "region_code",
"Population" = "pop"
)
head(d)
sapply(d, function(x) sum(is.na(x)))
dclean <- d %>%
drop_na()
d1 <- dclean[, -2]
table <- d1 %>%
select(6:16, 19, 22) %>%
tbl_summary(
statistic = list(
all_continuous() ~ "{mean}({sd})",
all_categorical() ~ "{p}%"
),
label = list(
No_formal ~ "No formal education",
Primary ~ "Primary as highest level",
Primary_complete ~ "Primary completed",
Secondary ~ "Secondary as highest level",
Secondary_complete ~ "Secondary completed",
"% of Tertiary" ~ "Tertiary as highest level",
Tertiary_complete ~ "Tertiary completed",
Schooling.year ~ "Average years of total schooling",
yr_sch_pri ~ "Average years of primary schooling",
yr_sch_sec ~ "Average years of secondary schooling",
Average.tertiary.schooling= "Average years of tertiary schooling",
Mean.year.of.childbearing ~ "Mean age of first childbearing",
Population ~ "female population (in 1000s)"
)
) %>%
modify_caption("**Table 1. Descriptive Statistics**")
table
d3 <- dclean %>%
filter(Region == "South Asia" )
plot2 <-  d3 %>%
ggplot(aes(x=Population, y = Average.tertiary.schooling, color = country)) +
geom_point(aes(size = "% of Tertiary", frame = year)) +
scale_color_viridis(discrete = TRUE)+
theme_minimal(base_size = 10) +
labs(
title = "The population of women and the average years of tertiary schooling \n both increased significantly in South Asian countries (1950-2015)",
x = "Population (in 1000s)",
y = "Average years of tertiary schooling",
color = "Country Name",
size = "",
caption = "Note: The sizes of the data points represent population sizes. \n Source: Barro and Lee (2013), http://www.barrolee.com/ \n UN, World Population Prospects, https://population.un.org/wpp/Download/"
) +
theme( plot.title = element_text(size = 10),
legend.position = "right",
legend.direction = "vertical",
legend.title = element_text(size = 8),
legend.text = element_text(size = 8),
panel.grid.major.y = element_blank(),
panel.grid.major.x = element_blank(),
axis.line.x = element_line(color = "black"),
axis.line.y = element_line(color = "black"),
) +
scale_x_continuous(breaks = seq(0, 400000,50000),
limits = c(0,400000),
labels = scales::comma)+
scale_y_continuous(breaks = seq(0, 0.7,0.1),
limits = c(0,0.7))
p2 <- ggplotly(plot2)
# Define button for switching to logarithmic scale
to_log_button <- list(
method = "relayout",
args = list(list(
xaxis = list(
type = "log",
range = list(log10(10), log10(400000)),
title = "Log of population",
titlefont = list(size = 10),
tickfont = list(size = 10)
),
yaxis = list(
type = "linear",
range = c(0,0.7),
titlefont = list(size = 10),
tickfont = list(size = 10),
title = "Average years of tertiary schooling",
showline = TRUE,
linecolor = "black",
linewidth = 0.5,
dtick = 0.1
)
)),
label = "Log"
)
# Button to reset to the original plot (linear scale in this case)
reset_to_original <- list(
method = "relayout",
args = list(list(
xaxis = list(
type = "linear",
range = c(0, 400000),
autorange = FALSE,
title = "Population (in 1000s)",
titlefont = list(size = 10),
tickfont = list(size = 10),
tickformat = ",",
tickmode = "auto",
nticks = 20
),
yaxis = list(
type = "linear",
range = c(0, 0.7),
autorange = FALSE,
title = "Average years of tertiary schooling",
titlefont = list(size = 10),
tickfont = list(size = 10),
dtick = 0.1
)
)),
label = "Reset"
)
p2 <- layout(p2, updatemenus = list(
list(
type = "buttons",
direction = "vertical",
xanchor = 'right',
yanchor = "top",
pad = list(r= 0, t= 5, b = 5),
x = 1,
y = 1,
buttons = list(reset_to_original, to_log_button) # Order can be adjusted
)
))
p2.1 <- layout(p2,
annotations = list(
list(
text = "Note: The sizes of the data points represent population sizes. <br>Source: Barro and Lee (2013), http://www.barrolee.com/ <br>UN, World Population Prospects, https://population.un.org/wpp/Download/",
x = 1.03,
y = -0.085,
showarrow = FALSE,
xref = 'paper',
yref = 'paper',
xanchor = 'right',
yanchor = 'bottom',
font = list(
size = 6
)
)
),
margin = list(b = 100) # Adjust bottom margin to ensure caption is visible
)
p2.1
d3 <- dclean %>%
filter(Region == "South Asia" )
plot2 <-  d3 %>%
ggplot(aes(x=Population, y = Average.tertiary.schooling, color = country)) +
geom_point(aes(size = `% of Tertiary`, frame = year)) +
scale_color_viridis(discrete = TRUE)+
theme_minimal(base_size = 10) +
labs(
title = "The population of women and the average years of tertiary schooling \n both increased significantly in South Asian countries (1950-2015)",
x = "Population (in 1000s)",
y = "Average years of tertiary schooling",
color = "Country Name",
size = "",
caption = "Note: The sizes of the data points represent population sizes. \n Source: Barro and Lee (2013), http://www.barrolee.com/ \n UN, World Population Prospects, https://population.un.org/wpp/Download/"
) +
theme( plot.title = element_text(size = 10),
legend.position = "right",
legend.direction = "vertical",
legend.title = element_text(size = 8),
legend.text = element_text(size = 8),
panel.grid.major.y = element_blank(),
panel.grid.major.x = element_blank(),
axis.line.x = element_line(color = "black"),
axis.line.y = element_line(color = "black"),
) +
scale_x_continuous(breaks = seq(0, 400000,50000),
limits = c(0,400000),
labels = scales::comma)+
scale_y_continuous(breaks = seq(0, 0.7,0.1),
limits = c(0,0.7))
p2 <- ggplotly(plot2)
# Define button for switching to logarithmic scale
to_log_button <- list(
method = "relayout",
args = list(list(
xaxis = list(
type = "log",
range = list(log10(10), log10(400000)),
title = "Log of population",
titlefont = list(size = 10),
tickfont = list(size = 10)
),
yaxis = list(
type = "linear",
range = c(0,0.7),
titlefont = list(size = 10),
tickfont = list(size = 10),
title = "Average years of tertiary schooling",
showline = TRUE,
linecolor = "black",
linewidth = 0.5,
dtick = 0.1
)
)),
label = "Log"
)
# Button to reset to the original plot (linear scale in this case)
reset_to_original <- list(
method = "relayout",
args = list(list(
xaxis = list(
type = "linear",
range = c(0, 400000),
autorange = FALSE,
title = "Population (in 1000s)",
titlefont = list(size = 10),
tickfont = list(size = 10),
tickformat = ",",
tickmode = "auto",
nticks = 20
),
yaxis = list(
type = "linear",
range = c(0, 0.7),
autorange = FALSE,
title = "Average years of tertiary schooling",
titlefont = list(size = 10),
tickfont = list(size = 10),
dtick = 0.1
)
)),
label = "Reset"
)
p2 <- layout(p2, updatemenus = list(
list(
type = "buttons",
direction = "vertical",
xanchor = 'right',
yanchor = "top",
pad = list(r= 0, t= 5, b = 5),
x = 1,
y = 1,
buttons = list(reset_to_original, to_log_button) # Order can be adjusted
)
))
p2.1 <- layout(p2,
annotations = list(
list(
text = "Note: The sizes of the data points represent population sizes. <br>Source: Barro and Lee (2013), http://www.barrolee.com/ <br>UN, World Population Prospects, https://population.un.org/wpp/Download/",
x = 1.03,
y = -0.085,
showarrow = FALSE,
xref = 'paper',
yref = 'paper',
xanchor = 'right',
yanchor = 'bottom',
font = list(
size = 6
)
)
),
margin = list(b = 100) # Adjust bottom margin to ensure caption is visible
)
p2.1
d4 <- dclean %>%
filter(Region == "South Asia") %>%
select(country, year, Schooling.year, yr_sch_sec)
p3 <- ggplot(d4, aes(x = year, y = Schooling.year, group = country, color = country)) +
geom_point(data=d4,aes(x=year,y=Schooling.year), shape =21, color = "black", fill = "white", size=3) +
geom_path()+
theme_minimal() +
labs(
x = "Year",
y = "Average years of total schooling",
color = "Country",
caption = "Source: Barro and Lee (2013), http://www.barrolee.com/ \n UN, World Population Prospects, https://population.un.org/wpp/Download/") +
theme(
legend.position = "right",
legend.direction = "vertical",
legend.title = element_text(size = 10),
legend.text = element_text(size = 6),
axis.line = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.major.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_text()
) +
scale_x_continuous(breaks = seq(1950, 2015,5),
limits = c(1950,2015))+
scale_y_continuous(breaks = seq(0, 12,2),
limits = c(0,12))+
transition_reveal(year)
my_color          <- rep('gray',length(unique(d4$country)))
names(my_color)   <- unique(d4$country)
my_color['Maldives'] <- 'blue'
my_color['Sri Lanka'] <- 'orange'
labels <- subset(d4,country = c('India', 'Maldives'))
p4<-  p3 +
labs(title = "Significant Increase in Average Years of Total Schooling for Women in <span style='color:orange'>Sri Lanka </span> Versus Temporary Decrease in <span style='color:blue'>Maldives </span> (1950-2015)") +
theme(plot.title = element_markdown(size  = 10))+
scale_color_manual(values = my_color)+
geom_text(data=labels,aes(x=year,y=Schooling.year,label=country),
size = 4,hjust=-0.2,vjust=1)+
guides(size=FALSE,color=FALSE)
animate(p4,
duration = 23,
fps = 20,
width = 800,
height = 600,
renderer = gifski_renderer(),
end_pause = 10)
my color
my_color
library(flexdashboard)
library(rio)
library(ggplot2)
library(tidyverse)
library(here)
library(gtsummary)
library(kableExtra)
library(plotly)
library(gapminder)
library(ggtext)
library(gganimate)
library(magick)
library(dplyr)
library(tidyr)
library(viridis)
library(flexdashboard)
library(rio)
library(ggplot2)
library(tidyverse)
library(here)
library(gtsummary)
library(kableExtra)
library(plotly)
library(gapminder)
library(ggtext)
library(gganimate)
library(magick)
library(dplyr)
library(tidyr)
library(viridis)
woman <- import(here("BL_v3_F2564.csv"))%>%
as.tibble()
library(flexdashboard)
library(rio)
library(ggplot2)
library(tidyverse)
library(here)
library(gtsummary)
library(kableExtra)
library(plotly)
library(gapminder)
library(ggtext)
library(gganimate)
library(magick)
library(dplyr)
library(tidyr)
library(viridis)
woman <- import(here("BL_v3_F2564.csv"))%>%
as.tibble()
woman <- import(here("BL_v3_F2564.csv"))%>%
as.tibble()
woman <- import(here("BL_v3_F2564.csv"))%>%
as.tibble()
woman <- import(here("data","BL_v3_F2564.csv"))%>%
as.tibble()
child <- import(here("data","childbearing.csv"))%>%
as.tibble()
child$country <- child$`Region, subregion, country or area *`
child$year <- child$Year
### combine dataset
d <- left_join(woman, child, join_by(country, year))
d <- d[, -c(21, 22)]
d$childbearing <- as.numeric(d$`Mean Age Childbearing (years)`)
d<- d %>%
group_by(country) %>%
mutate(Mean.year.of.childbearing = mean(childbearing))
head(d)
### rename variables
d <- d %>%
rename("No_formal" = "lu",
"Primary" = "lp",
"Primary_complete" = "lpc",
"Secondary" = "ls",
"Secondary_complete" = "lsc",
"% of Tertiary" = "lh",
"Tertiary_complete" = "lhc",
"Schooling.year" = "yr_sch",
"Average.tertiary.schooling" = "yr_sch_ter",
"Region" = "region_code",
"Population" = "pop"
)
head(d)
sapply(d, function(x) sum(is.na(x)))
dclean <- d %>%
drop_na()
